"""
Ejercicio 1:
a) Crear un programa que permita al usuario ingresar un n√∫mero e
indicar si es un n√∫mero deficiente. Un n√∫mero es deficiente cuando
es MAYOR a la suma de todos sus divisores propios (exceptu√°ndose
as√≠ mismo).
Por ejemplo:
14 es un n√∫mero deficiente porque sus divisores
son: 1,2,7 ‚Üí 10 < 14.
"""

numero: int = int(input("Ingrese un n√∫mero: "))
posible_divisor: int = 0                                    
suma_divisores: int = 0                                   

for posible_divisor in range(1, numero):
    if ((numero % posible_divisor) == 0):
        suma_divisores = suma_divisores + posible_divisor

if (numero > suma_divisores):
    print("Es un n√∫mero deficiente.")
else:
    print("Es un n√∫mero eficiente.")

"""
b) Crear un programa que permita al usuario ingresar un n√∫mero e
indicar si es un n√∫mero abundante. Un n√∫mero es abundante cuando
es MENOR a la suma de todos sus divisores propios (exceptu√°ndose
as√≠ mismo).
Por ejemplo:
12 es un n√∫mero abundante porque sus divisores
son: 1,2,3,4,6 ‚Üí 16 > 12.
"""

numero: int = int(input("Ingrese un n√∫mero: "))
posible_divisor: int = 0
suma_divisores: int = 0

for posible_divisor in range(1, numero):
    if ((numero % posible_divisor) == 0):
        suma_divisores = suma_divisores + posible_divisor

if (numero < suma_divisores):
    print("Es un n√∫mero abundante.")
else:
    print("Es un n√∫mero no abundante.")


"""
c) Crear un programa que permita al usuario ingresar un n√∫mero e
indicar si es un n√∫mero perfecto. Un n√∫mero es perfecto cuando es
IGUAL a la suma de todos sus divisores propios (exceptu√°ndose as√≠
mismo).
Por ejemplo:
6 es un n√∫mero perfecto porque sus divisores
son: 1,2,3 ‚Üí 6 = 6.
"""

numero: int = int(input("Ingrese un n√∫mero: "))
posible_divisor: int = 0
suma_divisores: int = 0

for posible_divisor in range(1, numero):
    if ((numero % posible_divisor) == 0):
        suma_divisores = suma_divisores + posible_divisor

if (numero == suma_divisores):                            
    print("Es un n√∫mero perfecto.")
else:
    print("Es un n√∫mero no perfecto.")


"""
d) Extra: Tomar uno de los incisos anteriores y verificar la condici√≥n
pedida para todos los n√∫meros en un intervalo (1, ùëõ] donde ùëõ es un
n√∫mero ingresado por el usuario.
"""

numero: int = int(input('Ingresar n√∫mero: '))            
suma_divisores: int = 0

for n in range(1, numero + 1):    

	suma_divisores: int = 0

	for posible_divisor in range(1, n) :       

		if (n % posible_divisor) == 0 :
			suma_divisores += posible_divisor

	if n > suma_divisores:
		print(f'El n√∫mero {n} es deficiente')

	elif n == suma_divisores :
		print(f'El n√∫mero {n} es perfecto')

	else:
		print(f'El n√∫mero {n} es abundante')







    
